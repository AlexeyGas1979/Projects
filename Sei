sudo apt update && sudo apt upgrade -y

sudo apt install curl build-essential git wget jq make gcc tmux htop nvme-cli pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip libleveldb-dev -y

curl -sL yabs.sh | bash -s — -ig

Disk Test
nvme smart-log /dev/nvme0
nvme smart-log /dev/nvme1

curl -sL yabs.sh | bash -s — -fg

Go:
ver="1.18.1" && \
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" && \
sudo rm -rf /usr/local/go && \
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" && \
rm "go$ver.linux-amd64.tar.gz" && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile && \
source $HOME/.bash_profile && \
go version

git clone https://github.com/sei-protocol/sei-chain && cd sei-chain
git checkout 1.0.2beta
make install

seid version --long | head

At an altitude of 153759 need to update:

sudo systemctl stop seid && \
sudo rm -rf $HOME/sei-chain && \
git clone https://github.com/sei-protocol/sei-chain.git && \
cd sei-chain && \
git checkout 1.0.3beta && \
make install

seid version --long | head
sudo systemctl restart seid && journalctl -u seid -f -o cat

seid init <name_moniker> --chain-id sei-testnet-2

wget -O $HOME/.sei/config/genesis.json "https://raw.githubusercontent.com/sei-protocol/testnet/main/sei-testnet-2/genesis.json"

sha256sum ~/.sei/config/genesis.json

cd && cat .sei/data/priv_validator_state.json
{
  "height": "0",
  "round": 0,
  "step": 0
}
seid config chain-id sei-testnet-2
sed -i.bak -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0.0025usei\"/;" ~/.sei/config/app.toml
external_address=$(wget -qO- eth0.me)
sed -i.bak -e "s/^external_address *=.*/external_address = \"$external_address:26656\"/" $HOME/.sei/config/config.toml

peers=""
sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" $HOME/.sei/config/config.toml

#bpeers=""
#sed -i.bak -e "s/^bootstrap-peers *=.*/bootstrap-peers = \"$bpeers\"/" $HOME/.sei/config/config.toml

seeds=""
sed -i.bak -e "s/^seeds =.*/seeds = \"$seeds\"/" $HOME/.sei/config/config.toml
seid tendermint unsafe-reset-all --home $HOME/.sei


Pruning:
pruning="custom" && \
pruning_keep_recent="100" && \
pruning_keep_every="0" && \
pruning_interval="50" && \
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.sei/config/app.toml && \
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.sei/config/app.toml && \
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.sei/config/app.toml && \
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.sei/config/app.toml

indexer="null" && \
sed -i -e "s/^indexer *=.*/indexer = \"$indexer\"/" $HOME/.sei/config/config.toml
snapshot_interval="1000" && \
sed -i.bak -e "s/^snapshot-interval *=.*/snapshot-interval = \"$snapshot_interval\"/" ~/.sei/config/app.toml

Service file:
sudo tee /etc/systemd/system/seid.service > /dev/null <<EOF
[Unit]
Description=seid
After=network-online.target

[Service]
User=$USER
ExecStart=$(which seid) start
Restart=on-failure
RestartSec=3
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload && \
sudo systemctl enable seid && \
sudo systemctl restart seid && sudo journalctl -u seid -f -o cat

Wallet:
seid keys add <name_wallet>
or
seid keys add <name_wallet> --recover

Validator create:
seid tx staking create-validator \
--chain-id sei-testnet-2 \
--commission-rate 0.05 \
--commission-max-rate 0.2 \
--commission-max-change-rate 0.1 \
--min-self-delegation 1 \
--amount 1000000usei \
--pubkey $(seid tendermint show-validator) \
--moniker "<name_moniker>" \
--from <name_wallet> \
--fees 5550usei

Commands:
Check blocks:
seid status 2>&1 | jq ."SyncInfo"."latest_block_height"

Logs:
sudo journalctl -u seid -f -o cat

Status:
curl localhost:26657/status

Balance:
seid q bank balances <address>

Check validator:
seid query staking validator <valoper_address>
seid query staking validators --limit 1000000 -o json | jq '.validators[] | select(.description.moniker=="<name_moniker>")' | jq

Check TX_HASH info:
seid query tx <TX_HASH>

Net`s parameters:
seid q staking params
seid q slashing params

How many blocks validator skip:
seid q slashing signing-info $(seid tendermint show-validator)

TX validator create:
seid query txs --events='create_validator.validator=<your_valoper_address>' -o=json | jq .txs[0].txhash -r

Claim revards:
seid tx distribution withdraw-rewards <valoper_address> --from <name_wallet> --fees 5555usei --commission -y

Own stake delegation (1 token):
seid tx staking delegate <valoper_address> 1000000usei --from <name_wallet> --fees 5555usei -y

Redelegation to other validator:
seid tx staking redelegate <src-validator-addr> <dst-validator-addr> 1000000usei --from <name_wallet> --fees 5555usei -y

Unbond:
seid tx staking unbond <addr_valoper> 1000000usei --from <name_wallet> --fees 5555usei -y

Send tockens to other address:
seid tx bank send <name_wallet> <address> 1000000usei --fees 5555usei -y

Unjail:
seid tx slashing unjail --from <name_wallet> --fees 5555usei -y

Wallet list:
seid keys list

Account key:
seid keys show <name_wallet> --bech acc

Validator key:
seid keys show <name_wallet> --bech val

Consensus key:
seid keys show <name_wallet> --bech cons

Account:
seid q auth account $(quicksilverd keys show <name_wallet> -a) -o text

Delite wallet:
seid keys delete <name_wallet>


Update:
cd seid
git pull
git checkout ...
make install

Delite node:
sudo systemctl stop seid && \
sudo systemctl disable seid && \
rm /etc/systemd/system/seid.service && \
sudo systemctl daemon-reload && \
cd $HOME && \
rm -rf .sei .sei-chain sei-chain && \
rm -rf $(which seid)

Proposals list
seid q gov proposals

Proposal result:
seid q gov proposals --voter <ADDRESS>

Proposal vote:
seid tx gov vote 1 yes --from <name_wallet> --fees 5550usei

Proposal deposit:
seid tx gov deposit 1 1000000usei --from <name_wallet> --fees 5550usei

Active set of validators:
seid q staking validators -o json --limit=1000 \
| jq '.validators[] | select(.status=="BOND_STATUS_BONDED")' \
| jq -r '.tokens + " - " + .description.moniker' \
| sort -gr | nl

Inactive set of validators:
seid q staking validators -o json --limit=1000 \


| jq '.validators[] | select(.status=="BOND_STATUS_UNBONDED")' \
| jq -r '.tokens + " - " + .description.moniker' \
| sort -gr | nl
Peers

Peers:
curl -s http://localhost:26657/net_info | jq -r '.result.peers[] | "\(.node_info.id)@\(.remote_ip):\(.node_info.listen_addr | split(":")[2])"' | wc -l

Connecting peers:
curl -s http://localhost:26657/net_info | jq '.result.peers[].node_info.moniker'

Vote power:
curl -s localhost:26657/consensus_state | jq '.result.round_state.height_vote_set[0].prevotes_bit_array'

Address TX`s
seid q txs --events transfer.sender=<ADDRESS> 2>&1 | jq | grep txhash

Income TX`s
seid q txs --events transfer.recipient=<ADDRESS> 2>&1 | jq | grep txhash

ID@IP:PORT
echo "$(seid tendermint show-node-id)@$(curl ifconfig.me):26656"

07/04/22 The network does not work - on prevention.
07/11/22 PR gentx sent.
07/12/22 Genesis has not yet been given. Nodes launched.

Testnet — atlantic-1:
wget -O sei.sh https://raw.githubusercontent.com/kj89/testnet_manuals/main/sei/sei.sh && chmod +x sei.sh && ./sei.sh

Create wallet:
seid keys add $WALLET

Recover your wallet using seed phrase
seid keys add $WALLET --recover

List of wallets:
seid keys list

Save wallet info:
SEI_WALLET_ADDRESS=$(seid keys show $WALLET -a)
SEI_VALOPER_ADDRESS=$(seid keys show $WALLET --bech val -a)
echo 'export SEI_WALLET_ADDRESS='${SEI_WALLET_ADDRESS} >> $HOME/.bash_profile
echo 'export SEI_VALOPER_ADDRESS='${SEI_VALOPER_ADDRESS} >> $HOME/.bash_profile
source $HOME/.bash_profile

Create your validator:
seid tx staking create-validator \
  --amount 1000000usei \
  --from $WALLET \
  --commission-max-change-rate "0.01" \
  --commission-max-rate "0.2" \
  --commission-rate "0.07" \
  --min-self-delegation "1" \
  --pubkey  $(seid tendermint show-validator) \
  --moniker $NODENAME \
  --chain-id $SEI_CHAIN_ID
  
  Edit validator:
seid tx staking edit-validator \
  --moniker=$NODENAME \
  --identity=<your_keybase_id> \
  --website="<your_website>" \
  --details="<your_validator_description>" \
  --chain-id=$SEI_CHAIN_ID \
  --from=$WALLET
